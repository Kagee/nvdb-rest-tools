#!/usr/bin/python
# coding=utf-8
# Based on work by Petter Reinholdtsen

import lxml.html
import datetime
import getopt
import urllib2
import urllib
from cookielib import CookieJar
import urlparse
import getpass
import time
import re
import lxml.etree as etree
import json

# make sure stdout is UTF-8, also when redirecting to pipe or file
import sys
import codecs
sys.stdout = codecs.getwriter('utf8')(sys.stdout)

def getval(element, xpath):
  sub = element.xpath(xpath)
  if 0 < len(sub):
    return sub[0].text
  return None

def convert():
  tree = etree.parse(sys.stdin)
  geos = tree.xpath('/vegObjekt/lokasjon/geometriWgs84')
  for geo in geos:
    if not "LINESTRING" in geo.text:
        print >> sys.stderr, 'Found something that was not LINESTRING' 
        continue
    linestring = geo.text[12:-1]
#    print linestring
    clist = linestring.split(', ')
    coords = []
    for pair in clist:
        pair = pair.split(' ')
        coords.append([float(pair[0]), float(pair[1])])
#    print coords

    print json.dumps({ 'type': 'Feature', 'id': "rv4-maybe", "properties":{}, 'geometry': { 'type': 'LineString', 'coordinates': coords }})

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help"])
    except getopt.error, msg:
        print msg
        print "for help use --help"
        sys.exit(2)

    for o, a in opts:
        if o in ("-h", "--help"):
            print main.__doc__
            sys.exit(0)

#    if len(args) < 1:
#        print "Usage: ", sys.argv[0], " arguments"
#        sys.exit(3)
#    if len(args) < 2:
#        arg2 = args[0]
#    else:
#        arg2 = args[1]
    convert()

if __name__ == "__main__":
    main()
